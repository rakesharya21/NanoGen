Metadata-Version: 2.1
Name: pymatgen
Version: 2018.8.10
Summary: Python Materials Genomics is a robust materials analysis code that defines core object representations for structures and molecules with support for many electronic structure codes. It is currently the core analysis code powering the Materials Project (https://www.materialsproject.org).
Home-page: http://www.pymatgen.org
Author: Pymatgen Development Team
Author-email: pymatgen@googlegroups.com
Maintainer: Shyue Ping Ong
Maintainer-email: ongsp@eng.ucsd.edu
License: MIT
Description: 
        Official docs: `http://pymatgen.org <http://pymatgen.org/>`_
        
        Pymatgen (Python Materials Genomics) is a robust, open-source Python library
        for materials analysis. These are some of the main features:
        
        1. Highly flexible classes for the representation of Element, Site, Molecule,
           Structure objects.
        2. Extensive input/output support, including support for VASP
           (http://cms.mpi.univie.ac.at/vasp/), ABINIT (http://www.abinit.org/), CIF,
           Gaussian, XYZ, and many other file formats.
        3. Powerful analysis tools, including generation of phase diagrams, Pourbaix
           diagrams, diffusion analyses, reactions, etc.
        4. Electronic structure analyses, such as density of states and band structure.
        5. Integration with the Materials Project REST API.
        
        Pymatgen is free to use. However, we also welcome your help to improve this
        library by making your own contributions.  These contributions can be in the
        form of additional tools or modules you develop, or feature requests and bug
        reports. Please report any bugs and issues at pymatgen's `Github page
        <https://github.com/materialsproject/pymatgen>`_. If you wish to be notified
        of pymatgen releases, you may become a member of `pymatgen's Google Groups page
        <https://groups.google.com/forum/?fromgroups#!forum/pymatgen/>`_.
        
        Why use pymatgen?
        =================
        
        There are many materials analysis codes out there, both commerical and free,
        but pymatgen offer several advantages:
        
        1. **It is (fairly) robust.** Pymatgen is used by thousands of researchers,
           and is the analysis code powering the `Materials Project`_. The analysis it
           produces survives rigorous scrutiny every single day. Bugs tend to be
           found and corrected quickly. Pymatgen also uses
           `CircleCI <https://circleci.com>`_ and `Appveyor <https://www.appveyor.com/>`_
           for continuous integration on the Linux and Windows platforms,
           respectively, which ensures that every commit passes a comprehensive suite
           of unittests. The coverage of the unittests can be seen at
           `here <coverage/index.html>`_.
        2. **It is well documented.** A fairly comprehensive documentation has been
           written to help you get to grips with it quickly.
        3. **It is open.** You are free to use and contribute to pymatgen. It also means
           that pymatgen is continuously being improved. We will attribute any code you
           contribute to any publication you specify. Contributing to pymatgen means
           your research becomes more visible, which translates to greater impact.
        4. **It is fast.** Many of the core numerical methods in pymatgen have been
           optimized by vectorizing in numpy/scipy. This means that coordinate
           manipulations are extremely fast and are in fact comparable to codes
           written in other languages. Pymatgen also comes with a complete system for
           handling periodic boundary conditions.
        5. **It will be around.** Pymatgen is not a pet research project. It is used in
           the well-established Materials Project. It is also actively being developed
           and maintained by the `Materials Virtual Lab`_, the ABINIT group and many
           other research groups.
        
        With effect from version 3.0, pymatgen now supports both Python 2.7 as well
        as Python 3.x.
        
Keywords: VASP,gaussian,ABINIT,nwchem,materials,project,electronic,structure,analysis,phase,diagrams
Platform: UNKNOWN
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Topic :: Scientific/Engineering :: Information Analysis
Classifier: Topic :: Scientific/Engineering :: Physics
Classifier: Topic :: Scientific/Engineering :: Chemistry
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Provides-Extra: provenance
Provides-Extra: ase
Provides-Extra: abinit
Provides-Extra: vis
